---
layout: post
title: Задание 2. Контейнеризировать сервис и собрать статы
date:   2021-07-09 
categories: core
---

Полученный на шаге 1 сервис обернуть в контейнер. Каждый сервис должен быть в отдельном контейнере. Если используется дополнительное ПО, например СУДБ, то оно тоже должно подниматься в отдельном контейнере. На данном шаге все должно запускаться  `docker-compose`.

Подключить к сервису сбор статистик, трейсов, логов и ошибок своего сервиса.

Минимальный набор статистик:

- Время выполнения отдельного запроса
- Количество запросов в секунду
- Время доступа к БД

Трассировать и логировать как минимум все запросы из вне, также обращения к источникам данных (TFS и другие). При желании добавить свои данные. Логи должны быть структурные.

Подключить контейнеры с софтом для сбора стат. Например

- `Prometheus` и `Grafana` для статистик
- `Jaeger` для трейсов
- `Sentry` для заведения ошибок
- `ELK`, `graylog`, `seq` для логов

Можно использовать рекомендованный софт, можно прикрутить что-то на свой выбор. 

Запускаться докер будет на Windows c wsl2 или на Linux. Не обязательно маунтить volume на диск.

### Definitions of done

1. В репозитории проекта есть один `docker-compose`, в котором описаны все сервисы и зависимости
2. Можно запустить этот файл командой `docker-compose up -d`. Все работает
3. Выполняется Dod из [задания 1]({% post_url 2021-06-28-task-1 %})
4. Можно зайти в UI сервисов со статами, метриками и логами. 
5. Опционально. Есть "backdor", который сгенерит ошибку и она появится в `Sentry`